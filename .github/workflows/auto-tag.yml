name: Auto Tag Commits

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout without GITHUB_TOKEN so our PAT is used below
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # 2. Determine bump type from commit message
      - name: Detect TAG Type in Commit
        id: tag_check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit: $COMMIT_MSG"
          if [[ "$COMMIT_MSG" != TAG* ]]; then
            echo "No TAG prefix foundâ€”skipping."
            exit 1
          fi
          if echo "$COMMIT_MSG" | grep -qi "TAG: *major"; then
            echo "BUMP_TYPE=major" >> $GITHUB_ENV
          elif echo "$COMMIT_MSG" | grep -qi "TAG: *minor"; then
            echo "BUMP_TYPE=minor" >> $GITHUB_ENV
          else
            echo "BUMP_TYPE=patch" >> $GITHUB_ENV
          fi

      # 3. Calculate new tag
      - name: Generate Next Tag
        id: version
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          IFS='.' read MAJOR MINOR PATCH <<< "${LAST_TAG#v}"
          case "$BUMP_TYPE" in
            major) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0 ;;
            minor) MINOR=$((MINOR+1)); PATCH=0 ;;
            patch) PATCH=$((PATCH+1)) ;;
          esac
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "New tag: $NEW_TAG"

      # 4. Push the new tag via PAT so it generates a real push:tags event
      - name: Create and Push Tag
        run: |
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a $NEW_TAG -m "Release $NEW_TAG"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} $NEW_TAG
